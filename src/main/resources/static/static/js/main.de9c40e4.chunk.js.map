{"version":3,"sources":["utils/validateEmail.js","services/authService.js","providers/authProvider.js","StyledApp.js","components/PrivateRoute/index.js","containers/Broadcast/style.js","components/TextField/style.js","components/TextField/index.js","components/Button/index.js","services/chatService.js","providers/chatProvider.js","containers/Broadcast/index.js","containers/Login/style.js","components/Input/style.js","components/Input/index.js","containers/Login/index.js","containers/Register/style.js","containers/Register/index.js","App.js","reportWebVitals.js","index.js"],"names":["validateEmail","email","test","String","toLowerCase","AuthService","_url","_validateStringField","field","value","trim","length","Error","_validateEmail","_username","username","sessionStorage","getItem","setItem","_token","token","isLoggedIn","this","register","password","studentId","firstName","lastName","Promise","resolve","then","fetch","method","body","JSON","stringify","headers","res","status","json","message","login","data","jwt","logout","clear","retrieveUser","authorization","userData","AuthState","createContext","AuthDispatch","EVENT_TYPES","EVENTS","state","event","payload","name","error","INITIAL_STATE","undefined","AuthReducer","type","AuthProvider","children","useReducer","dispatch","handleLogin","catch","events","onUpdate","target","onRegister","onLogin","onLogout","onLoadUserData","onClearErrors","Provider","useAuthState","context","useContext","useAuthDispatch","StyledApp","styled","div","PrivateRoute","redirectTo","rest","render","to","StyledBroadcast","MainBox","MainHeader","h1","FormGroup","form","MainBody","StyledTextField","textarea","TextField","props","ButtonStyle","button","Button","ChatService","loadChat","room","historyChat","ChatState","ChatDispatch","chatHistory","isChatLoaded","ChatReducer","ChatProvider","onLoadChat","SOCKET_URL","window","location","origin","Broadcast","client","useRef","useState","clientMsg","setClientMsg","useChatState","useChatDispatch","useEffect","isMe","msg","from","split","fullName","Authorization","url","topics","onConnect","toast","info","position","autoClose","hideProgressBar","onMessage","onConnectFailure","err","console","log","debug","ref","style","flex","onClick","map","index","content","textAlign","fontSize","moment","parseInt","dateTime","fromNow","onSubmit","e","preventDefault","current","sendMessage","Date","getTime","toString","cols","rows","placeholder","onChange","StyledLogin","InputStyle","input","invalid","InvalidMessage","span","Input","invalidMsg","innerRef","defaultProps","Login","StyledRegister","Register","firstNameRef","lastNameRef","confirmPasswordRef","studentIdRef","marginBottom","App","history","useHistory","unlisten","listen","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de9c40e4.chunk.js","sourcesContent":["const validateEmail = email => {\r\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n  return regex.test(String(email).toLowerCase())\r\n}\r\n\r\nexport default validateEmail","import validateEmail from '../utils/validateEmail'\r\n\r\nconst AuthService = {\r\n  _url: '',\r\n\r\n  _validateStringField(field, value) {\r\n    if (typeof value !== 'string' || !value.trim().length)\r\n      throw Error(`${field} is not valid`)\r\n  },\r\n\r\n  _validateEmail(email) {\r\n    if (!validateEmail(email)) throw Error(`${email} is not a valid email`)\r\n  },\r\n\r\n  _username(username) {\r\n    if (typeof username !== 'undefined') {\r\n      sessionStorage.setItem('username', username)\r\n\r\n      return\r\n    }\r\n\r\n    return sessionStorage.getItem('username')\r\n  },\r\n\r\n  _token(token) {\r\n    if (typeof token !== 'undefined') {\r\n      sessionStorage.setItem('token', token)\r\n\r\n      return\r\n    }\r\n\r\n    return sessionStorage.getItem('token')\r\n  },\r\n\r\n  isLoggedIn() {\r\n    const res = !!(this._username() && this._token())\r\n\r\n    return res\r\n  },\r\n\r\n  register(username, email, password, studentId, firstName, lastName) {\r\n    return Promise.resolve().then(() => {\r\n      this._validateStringField('username', username)\r\n      this._validateEmail(email)\r\n      this._validateStringField('password', password)\r\n      this._validateStringField('studentId', studentId)\r\n      this._validateStringField('firstName', firstName)\r\n      this._validateStringField('lastName', lastName)\r\n\r\n      return fetch(`${this._url}/register`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ username, email, password, studentId, firstName, lastName }),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => {\r\n          if (res.status === 201) {\r\n            return res\r\n          }\r\n\r\n          return res.json().then(({ message }) => {\r\n            throw Error(message)\r\n          })\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => true)\r\n    })\r\n  },\r\n\r\n  login(username, password) {\r\n    return Promise.resolve().then(() => {\r\n      this._validateStringField('username', username)\r\n      this._validateStringField('password', password)\r\n\r\n      return fetch(`${this._url}/authenticate`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ username, password }),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      }).then(res => {\r\n          if (res.status === 200) {\r\n            return res\r\n          }\r\n\r\n          return res.json().then(({ message }) => {\r\n            throw Error(message)\r\n          })\r\n        })\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n          this._token(data.jwt)\r\n          this._username(data.username)\r\n\r\n          return true\r\n        })\r\n    })\r\n  },\r\n\r\n  logout() {\r\n    return Promise.resolve().then(() => {\r\n      sessionStorage.clear()\r\n\r\n      return true\r\n    })\r\n  },\r\n\r\n  retrieveUser() {\r\n    return fetch(`${this._url}/user/${this._username()}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this._token()}`\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        return res\r\n      }\r\n\r\n      return res.json().then(({ message }) => {\r\n        throw Error(message)\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(userData => userData)\r\n  }\r\n}\r\n\r\nexport default AuthService","import React, { createContext, useContext, useReducer } from 'react'\r\nimport AuthService from '../services/authService'\r\n\r\nconst AuthState = createContext()\r\nconst AuthDispatch = createContext()\r\n\r\nconst EVENT_TYPES = {\r\n  UPDATE: 'update',\r\n  LOGIN_SUCCESS: 'login_success',\r\n  LOGIN_ERROR: 'login_error',\r\n  LOGOUT: 'logout',\r\n  USER_LOADED: 'user_loaded',\r\n  USER_LOAD_FAILED: 'user_load_failed',\r\n  CLEAR_ERRORS: 'clear_errors',\r\n  ERROR: 'error'\r\n}\r\n\r\nconst EVENTS = {\r\n  [EVENT_TYPES.UPDATE]: (state, event) => {\r\n    const { name, value } = event.payload\r\n\r\n    return {\r\n      ...state,\r\n      [name]: value\r\n    }\r\n  },\r\n  [EVENT_TYPES.LOGIN_SUCCESS]: state => {\r\n    return {\r\n      ...state,\r\n      isLoggedIn: true\r\n    }\r\n  },\r\n  [EVENT_TYPES.USER_LOADED]: (state, event) => {\r\n    return {\r\n      ...state,\r\n      userData: event.payload.userData\r\n    }\r\n  },\r\n  [EVENT_TYPES.LOGIN_ERROR]: (state, event) => {\r\n    const { error } = event.payload\r\n    return {\r\n      ...state,\r\n      isLoggedIn: false,\r\n      error\r\n    }\r\n  },\r\n  [EVENT_TYPES.LOGOUT]: () => {\r\n    return {\r\n      name: '',\r\n      password: '',\r\n      error: '',\r\n      isLoggedIn: false\r\n    }\r\n  },\r\n  [EVENT_TYPES.ERROR]: (state, event) => {\r\n    const { error } = event.payload\r\n    return {\r\n        ...state,\r\n        error\r\n    }\r\n  },\r\n  [EVENT_TYPES.USER_LOAD_FAILED]: (state, event) => {\r\n    const { error } = event.payload\r\n    return {\r\n        ...state,\r\n        error\r\n    }\r\n  },\r\n  [EVENT_TYPES.CLEAR_ERRORS]: state => {\r\n    return {\r\n        ...state,\r\n        error: ''\r\n    }\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  isLoggedIn: AuthService.isLoggedIn(),\r\n  token: AuthService._token(),\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n  userData: undefined,\r\n  error: ''\r\n}\r\n\r\nconst AuthReducer = (state, event) => {\r\n  return EVENTS[event.type](state, event) || state\r\n}\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE)\r\n\r\n    const handleUpdate = event => {\r\n      const name = event.target.name\r\n      const value = event.target.value\r\n\r\n      dispatch({ type: EVENT_TYPES.UPDATE, payload: { name, value } })\r\n    }\r\n\r\n    const handleRegister = (studentId, firstName, lastName) => {\r\n      const { username, email, password } = state\r\n\r\n      AuthService.register(username, email, password, studentId, firstName, lastName)\r\n        .then(() => handleLogin())\r\n        .catch(({ message }) => {\r\n          dispatch({\r\n            type: EVENT_TYPES.ERROR,\r\n            payload: { error: message }\r\n          })\r\n        })\r\n    }\r\n\r\n    const handleLogin = () => {\r\n      const { username, password } = state\r\n      AuthService.login(username, password)\r\n        .then(() => {\r\n          dispatch({ type: EVENT_TYPES.LOGIN_SUCCESS })\r\n        })\r\n        .catch(({ message }) => {\r\n          dispatch({\r\n            type: EVENT_TYPES.LOGIN_ERROR,\r\n            payload: { error: message }\r\n          })\r\n        })\r\n    }\r\n\r\n    const handleLogout = () => {\r\n      AuthService.logout().then(() => {\r\n        dispatch({ type: EVENT_TYPES.LOGOUT })\r\n      })\r\n    }\r\n\r\n    const handleClearErrors = () => {\r\n      dispatch({ type: EVENT_TYPES.CLEAR_ERRORS })\r\n    }\r\n\r\n    const handleUserDataLoading = () => {\r\n      AuthService.retrieveUser().then(userData => {\r\n        dispatch({ \r\n          type: EVENT_TYPES.USER_LOADED,\r\n          payload: { userData }\r\n        })\r\n      }).catch(({ message }) => {\r\n        dispatch({ \r\n          type: EVENT_TYPES.USER_LOAD_FAILED,\r\n          payload: { error: message }\r\n         })\r\n      })\r\n    }\r\n\r\n    const events = {\r\n      onUpdate: handleUpdate,\r\n      onRegister: handleRegister,\r\n      onLogin: handleLogin,\r\n      onLogout: handleLogout,\r\n      onLoadUserData: handleUserDataLoading,\r\n      onClearErrors: handleClearErrors\r\n    }\r\n\r\n    return (\r\n      <AuthState.Provider value={state}>\r\n        <AuthDispatch.Provider value={events}>\r\n          {children}\r\n        </AuthDispatch.Provider>\r\n      </AuthState.Provider>\r\n    )\r\n}\r\n\r\nconst useAuthState = () => {\r\n  const context = useContext(AuthState)\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useAuthState must be used within a AuthProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst useAuthDispatch = () => {\r\n  const context = useContext(AuthDispatch)\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useAuthDispatch must be used within a AuthProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport { AuthProvider, useAuthState, useAuthDispatch }","import styled from 'styled-components'\r\n\r\nexport const StyledApp = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n`","\r\nimport React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuthState } from '../../providers/authProvider'\r\n\r\nconst PrivateRoute = ({ children, redirectTo, ...rest }) => {\r\n  const { isLoggedIn } = useAuthState()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        isLoggedIn ? children : <Redirect to={redirectTo} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute","import styled from 'styled-components'\r\n\r\nexport const StyledBroadcast = styled.div`\r\n  position: relative;\r\n  text-align: left;\r\n  height: 100%;\r\n  background: rgb(220, 220, 220);\r\n  opacity: 0.8;\r\n\r\n  ul {\r\n    list-style: none;\r\n    padding: 15px;\r\n    margin: 0;\r\n    border: 1px solid rgb(180, 180, 180);\r\n    height: 100%;\r\n    overflow-y: scroll;\r\n    width: 50vw;\r\n    height: 50vh;\r\n  }\r\n\r\n  li {\r\n    height: 80px;\r\n    height: auto;\r\n    width: 100%;\r\n    padding: 1em;\r\n  }\r\n\r\n  p {\r\n    font-size: 22px;\r\n    padding: 5px 0;\r\n  }\r\n\r\n  h1 {\r\n    font-weight: 300;\r\n  }\r\n`\r\n\r\nexport const MainBox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: 0px 4px 8px 0px rgba(122,122,122,1);\r\n`\r\n\r\nexport const MainHeader = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  background: var(--primary-color);\r\n  color: white;\r\n  padding: 1em;\r\n\r\n  button {\r\n    background: darkred;\r\n    font-size: 16px;\r\n  }\r\n\r\n  button:hover {\r\n    background: rgb(180, 0, 0);\r\n  }\r\n`\r\n\r\nexport const FormGroup = styled.form`\r\n  display: flex;\r\n  margin: 1em 0;\r\n`\r\n\r\nexport const MainBody = styled.div`\r\n  background: white;\r\n  padding: 2em;\r\n  border-radius: 5px;\r\n\r\n  textarea {\r\n    flex: 4;\r\n    border: 1px solid rgb(180, 180, 180);\r\n    width: 100%;\r\n    resize: none;\r\n    font-size: 16px;\r\n    padding: 10px;\r\n  }\r\n\r\n  button {\r\n    flex: 1;\r\n    margin: 0;\r\n  }\r\n\r\n  textarea:focus {\r\n    outline: none;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledTextField = styled.textarea`\r\n  \r\n`","import { Fragment } from 'react'\r\nimport { StyledTextField } from './style'\r\n\r\nconst TextField = ({...props}) => {\r\n  return (\r\n    <Fragment>\r\n      <StyledTextField {...props}></StyledTextField>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TextField\r\n","import styled from 'styled-components'\r\n\r\nconst ButtonStyle = styled.button`\r\n\tpadding: 10px 20px;\r\n\tfont-size: 1em;\r\n\tmargin: 10px 0;\r\n\twidth: 100%;\r\n\toutline: none;\r\n\tborder: none;\r\n\tbackground-color: var(--primary-color);\r\n\tcolor: white;\r\n\ttransition: all .3s ease-out;\r\n\r\n\t:hover {\r\n\t\tbackground-color: var(--primary-color-hover);\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t:active {\r\n\t\tbackground-color: var(--primary-color);\r\n\t}\r\n`\r\nconst Button = (props) => {\r\n  return (\r\n\t\t<ButtonStyle {...props}>{ props.children }</ButtonStyle>\r\n\t)\r\n}\r\n\r\nButton.propTypes = {\r\n\t\r\n}\r\n\r\nexport default Button","const ChatService = {\r\n  _url: '',\r\n  loadChat(room, token) {\r\n    return fetch(`${this._url}/history/${room}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${ token }`\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        return res\r\n      }\r\n\r\n      return res.json().then(({ message }) => {\r\n        throw Error(message)\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(historyChat => historyChat)\r\n  }\r\n}\r\n\r\nexport default ChatService","import { createContext, useContext, useReducer } from 'react'\r\nimport ChatService from '../services/chatService'\r\n\r\nconst ChatState = createContext()\r\nconst ChatDispatch = createContext()\r\n\r\nconst EVENT_TYPES = {\r\n  CHAT_LOADED: 'chat_loaded',\r\n  CHAT_LOAD_FAILED: 'chat_load_failed'\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  chatHistory: [],\r\n  isChatLoaded: false\r\n}\r\n\r\nconst EVENTS = {\r\n\r\n  [EVENT_TYPES.CHAT_LOADED]: (state, event) => {\r\n    return {\r\n      ...state,\r\n      chatHistory: event.payload.chatHistory,\r\n      isChatLoaded: true\r\n    }\r\n  },\r\n  [EVENT_TYPES.CHAT_LOAD_FAILED]: (state, event) => {\r\n    const { error } = event.payload\r\n    return {\r\n        ...state,\r\n        error\r\n    }\r\n  }\r\n}\r\n\r\nconst ChatReducer = (state, event) => {\r\n  return EVENTS[event.type](state, event) || state\r\n}\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(ChatReducer, INITIAL_STATE)\r\n\r\n  const handleChatLoading = event => {\r\n    ChatService.loadChat('main', sessionStorage.getItem('token')).then(chatHistory => {\r\n      dispatch({ \r\n        type: EVENT_TYPES.CHAT_LOADED,\r\n        payload: { chatHistory }\r\n       })\r\n    }).catch(({ message }) => {\r\n      dispatch({\r\n        type: EVENT_TYPES.CHAT_LOAD_FAILED,\r\n        payload: { error: message }\r\n      })\r\n    })\r\n  }\r\n\r\n  const events = {\r\n    onLoadChat: handleChatLoading\r\n  }\r\n\r\n  return (\r\n    <ChatState.Provider value={state}>\r\n      <ChatDispatch.Provider value={events}>\r\n        {children}\r\n      </ChatDispatch.Provider>\r\n    </ChatState.Provider>\r\n  )\r\n}\r\n\r\nconst useChatState = () => {\r\n  const context = useContext(ChatState)\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useChatState must be used within a ChatProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst useChatDispatch = () => {\r\n  const context = useContext(ChatDispatch)\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useChatDispatch must be used within a ChatProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport { ChatProvider, useChatState, useChatDispatch }\r\n","import React, { useState, useRef, useEffect, Fragment} from 'react'\r\nimport SockJsClient from 'react-stomp'\r\nimport { toast } from 'react-toastify'\r\nimport moment from 'moment'\r\n\r\nimport { useAuthDispatch, useAuthState  } from '../../providers/authProvider'\r\nimport { StyledBroadcast, MainBody, MainBox, MainHeader, FormGroup } from './style'\r\nimport TextField from '../../components/TextField'\r\nimport Button from '../../components/Button'\r\nimport { useChatDispatch, useChatState } from '../../providers/chatProvider'\r\n\r\nconst SOCKET_URL = `${window.location.origin}/ws`\r\nconst TOPIC_PATH = '/topic/message/main'\r\n\r\nconst Broadcast = () => {\r\n  const client = useRef()\r\n  const [clientMsg, setClientMsg] = useState('')\r\n  const { chatHistory, isChatLoaded } = useChatState()\r\n  const { onLoadChat } = useChatDispatch()\r\n  const { onLogout } = useAuthDispatch()\r\n  const { userData, token } = useAuthState()\r\n\r\n  useEffect(() => {\r\n    if (!isChatLoaded) {\r\n      onLoadChat()\r\n    }\r\n  }, [onLoadChat, isChatLoaded])\r\n\r\n  const isMe = (msg) => (msg.from.split(' ')[0] === userData.firstName)\r\n  const fullName = (userData ? userData.firstName + ' ' + userData.lastName : '')\r\n\r\n  const onConnected = () => {\r\n    toast.info('You are now connected to chat session.', {\r\n      position: 'top-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: true,\r\n    })\r\n  }\r\n\r\n  const onMessageReceived = (msg) => {\r\n    onLoadChat()\r\n  }\r\n\r\n  const onConnectFailure = (err) => {\r\n    console.log('Cannot connect to server. please try to reconnect again.')\r\n    throw err\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const message = e.target.value\r\n    setClientMsg(message)\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    client.current.sendMessage('/app/message/main', JSON.stringify({\r\n      from: fullName,\r\n      to: 'main',\r\n      content: clientMsg,\r\n      dateTime: new Date().getTime().toString()\r\n    }))\r\n    setClientMsg('')\r\n  }\r\n\r\n  return !userData ? <Fragment/> : (\r\n    <StyledBroadcast>\r\n      <SockJsClient\r\n        headers={{ Authorization: `Bearer ${token}` }}\r\n        url={ SOCKET_URL }\r\n        topics={[ TOPIC_PATH ]}\r\n        onConnect={ onConnected }\r\n        onMessage={ msg => onMessageReceived(msg) }\r\n        onConnectFailure={ onConnectFailure }\r\n        debug={ false }\r\n        ref={ client }\r\n      />\r\n      <MainBox>\r\n        <MainHeader>\r\n          <div style={{ flex: '10' }}>SIT CHAT - { fullName }</div>\r\n          <Button style={{ flex: '1' }} onClick={ onLogout }>Logout</Button>\r\n        </MainHeader>\r\n        <MainBody>\r\n          <ul>\r\n            { chatHistory.map((msg, index) => (\r\n              <li key={ index }>\r\n                <div>\r\n                  <h4>{ msg.from } { isMe(msg) ? '(Me)' : '' }:</h4>\r\n                  <p>{ msg.content }</p>\r\n                </div>\r\n                <p style={{ textAlign: 'right', fontSize: '14px' }}>{ moment(parseInt(msg.dateTime)).fromNow() }</p>\r\n              </li>\r\n            )) }\r\n          </ul>\r\n          <FormGroup onSubmit={ onSubmit }>\r\n            <TextField cols='60' rows='5' placeholder='Enter your message' onChange={ handleChange } value={ clientMsg }></TextField>\r\n            <Button type='submit'>Send</Button>\r\n          </FormGroup>\r\n        </MainBody>\r\n      </MainBox>\r\n    </StyledBroadcast>\r\n  )\r\n}\r\n\r\nexport default Broadcast","import styled  from 'styled-components'\r\n\r\nexport const StyledLogin = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  height: 100%;\r\n  background: rgb(220, 220, 220);\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--primary-color);\r\n    transition: all .3s ease-out;\r\n  }\r\n\r\n  a:hover {\r\n    color: var(--primary-color-hover);\r\n    transform: scale(1.01);\r\n  }\r\n\r\n  h1 {\r\n    font-weight: 300;\r\n    padding: 1em 0;\r\n  }\r\n`\r\n\r\nexport const MainBody = styled.div`\r\n  max-width: 1020px;\r\n  background: white;\r\n  padding: 2em;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 8px 0px rgba(122,122,122,1);\r\n`\r\n\r\nexport const FormGroup = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`","import styled from 'styled-components'\r\n\r\nexport const InputStyle = styled.input`\r\n\tdisplay: block;\r\n\tpadding: 0.5em 1em;\r\n\tmargin: 5px 0;\r\n\twidth: 300px;\r\n\theight: 40px;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.2);\r\n\tborder-bottom: 2px solid ${({ invalid }) => invalid ? 'red' : 'rgba(0, 0, 0, 0.2)' };\r\n\ttransition: all .3s ease-out;\r\n\tfont-size: 1em;\r\n\r\n\t:focus {\r\n\t\toutline: none;\r\n\t\tborder-bottom-color: ${({ invalid }) => invalid ? 'red' : 'rgba(0, 0, 0, 0.2)' };\r\n\t\tbox-shadow: var(--inner-shadow);\r\n\t}\r\n`\r\n\r\nexport const InvalidMessage = styled.span`\r\n\ttext-align: left;\r\n\tcolor: red;\r\n\twidth: 100%;\r\n\tfont-size: 14px;\r\n`","import { Fragment  } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { InputStyle, InvalidMessage } from './style.js'\r\n\r\nconst Input = ({invalidMsg, ...props}) => {\r\n  return (\r\n\t\t<Fragment>\r\n\t\t\t<InputStyle {...props} ref={props.innerRef} invalid={ invalidMsg !== '' }/>\r\n\t\t\t<InvalidMessage>\r\n\t\t\t\t{ invalidMsg }\r\n\t\t\t</InvalidMessage>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nInput.defaultProps = {\r\n\tinvalidMsg: ''\r\n}\r\n\r\nInput.propTypes = {\r\n\tinvalidMsg: PropTypes.string\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { StyledLogin, FormGroup, MainBody } from './style.js'\r\nimport Input  from '../../components/Input'\r\nimport Button from '../../components/Button'\r\n\r\nimport { useAuthState, useAuthDispatch } from '../../providers/authProvider'\r\n\r\nconst Login = () => {\r\n  const { onUpdate, onLogin } = useAuthDispatch()\r\n  const { username, password } = useAuthState()\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    onLogin()\r\n  }\r\n\r\n  return (\r\n    <StyledLogin>\r\n      <MainBody>\r\n        <h1>SIT CHAT</h1>\r\n        <FormGroup onSubmit={ onSubmit }>\r\n          <div>\r\n            <Input name='username' value={ username || '' }type='text' placeholder='Username' onChange={ onUpdate }/>\r\n            <Input name='password' value={ password || '' }type='password' placeholder='Password' onChange={ onUpdate }/>\r\n          </div>\r\n          <Button type='submit'>Login</Button>\r\n          <Link to='/register'>I don't have an account yet.</Link>\r\n        </FormGroup>\r\n      </MainBody>\r\n    </StyledLogin>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledRegister = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\ntext-align: center;\r\nheight: 100%;\r\nbackground: rgb(220, 220, 220);\r\n\r\na {\r\n  text-decoration: none;\r\n  color: var(--primary-color);\r\n  transition: all .3s ease-out;\r\n}\r\n\r\na:hover {\r\n  color: var(--primary-color-hover);\r\n  transform: scale(1.01);\r\n}\r\n\r\nh1 {\r\n  font-weight: 300;\r\n  padding: 1em 0;\r\n}\r\n`\r\n\r\nexport const MainBody = styled.div`\r\n  max-width: 1020px;\r\n  background: white;\r\n  padding: 2em;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 8px 0px rgba(122,122,122,1);\r\n`\r\n\r\nexport const FormGroup = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`","import React, { useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { StyledRegister, FormGroup, MainBody } from './style.js'\r\nimport Input  from '../../components/Input'\r\nimport Button from '../../components/Button'\r\n\r\nimport { useAuthState, useAuthDispatch } from '../../providers/authProvider'\r\n\r\nconst Register = () => {\r\n  const { onUpdate, onRegister } = useAuthDispatch()\r\n  const { username, password, email } = useAuthState()\r\n  const firstNameRef = useRef();\r\n  const lastNameRef = useRef();\r\n  const confirmPasswordRef = useRef();\r\n  const studentIdRef = useRef();\r\n\r\n  const onSubmit = function(e) {\r\n    e.preventDefault();\r\n    if (confirmPasswordRef.current.value !== password) return;\r\n    onRegister(studentIdRef.current.value, firstNameRef.current.value, lastNameRef.current.value);\r\n  }\r\n\r\n  return (\r\n    <StyledRegister>\r\n      <MainBody>\r\n        <h1>REGISTER</h1>\r\n        <FormGroup onSubmit={ onSubmit }>\r\n          <div style={{marginBottom: \"8px\"}}>\r\n            <Input name='username' value={ username || '' } type='text' placeholder='Username' onChange={ onUpdate }/>\r\n            <Input name='password' value={ password || ''} type='password' placeholder='Password' onChange={ onUpdate }/>\r\n            <Input name='confirmPassword' innerRef={confirmPasswordRef} type='password' placeholder='Confirm Password'/>\r\n          </div>\r\n          <div>\r\n            <Input name='firstName' innerRef={firstNameRef} type='text' placeholder='First Name'/>\r\n            <Input name='lastName' innerRef={lastNameRef} type='text' placeholder='Last Name'/>\r\n            <Input name='studentId' innerRef={studentIdRef} type='text' placeholder='Student ID'/>\r\n            <Input name='email' value={ email || '' } type='email' placeholder='Email' onChange={ onUpdate }/>\r\n          </div>\r\n          <Button type='submit'>Register</Button>\r\n          <Link to='/login'>Already have an account? Login</Link>\r\n        </FormGroup>\r\n      </MainBody>\r\n    </StyledRegister>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import { useEffect } from 'react'\r\nimport { Route, useHistory, Switch, Redirect } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { useAuthState, useAuthDispatch } from './providers/authProvider'\r\nimport { StyledApp } from './StyledApp'\r\n\r\nimport PrivateRoute from './components/PrivateRoute'\r\n\r\nimport Broadcast from './containers/Broadcast'\r\nimport Login from './containers/Login'\r\nimport Register from './containers/Register'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst App = () => {\r\n  const { onClearErrors, onLoadUserData } = useAuthDispatch()\r\n  const { error, isLoggedIn, userData } = useAuthState()\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      error && onClearErrors()\r\n    })\r\n\r\n    if (isLoggedIn && !userData) {\r\n      onLoadUserData()\r\n    }\r\n\r\n    return () => unlisten()\r\n  },[history, error, onClearErrors, isLoggedIn, userData, onLoadUserData])\r\n\r\n  return (\r\n    <StyledApp>\r\n      <Switch>\r\n        <PrivateRoute exact path='/' redirectTo='/login'>\r\n          <Broadcast/>\r\n        </PrivateRoute>\r\n        <Route exact path='/login'>\r\n          { isLoggedIn ? <Redirect to='/'/> : <Login/> }\r\n        </Route>\r\n        <Route exact path='/register'>\r\n         { isLoggedIn ? <Redirect to='/'/> : <Register/> }\r\n        </Route>\r\n      </Switch>\r\n      <ToastContainer />\r\n    </StyledApp>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { AuthProvider } from './providers/authProvider'\r\nimport { ChatProvider } from './providers/chatProvider'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <ChatProvider>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </ChatProvider>\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}